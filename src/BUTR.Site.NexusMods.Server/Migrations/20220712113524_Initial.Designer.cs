// <auto-generated />
using System;
using System.Collections.Generic;
using BUTR.Site.NexusMods.Server.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BUTR.Site.NexusMods.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220712113524_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BUTR.Site.NexusMods.Server.Models.Database.CrashReportEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("exception");

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("game_version");

                    b.Property<List<string>>("InvolvedModIds")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("involved_mod_ids");

                    b.Property<List<string>>("ModIds")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("mod_ids");

                    b.Property<List<int>>("ModNexusModsIds")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("mod_nexusmods_ids");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("crash_report_entity_pkey");

                    b.ToTable("crash_report_entity", (string)null);
                });

            modelBuilder.Entity("BUTR.Site.NexusMods.Server.Models.Database.CrashReportFileEntity", b =>
                {
                    b.Property<string>("Filename")
                        .HasColumnType("text")
                        .HasColumnName("filename");

                    b.Property<Guid>("crash_report_id")
                        .HasColumnType("uuid");

                    b.HasKey("Filename")
                        .HasName("crash_report_file_entity_pkey");

                    b.HasIndex("crash_report_id")
                        .IsUnique();

                    b.ToTable("crash_report_file", (string)null);
                });

            modelBuilder.Entity("BUTR.Site.NexusMods.Server.Models.Database.ModNexusModsManualLinkEntity", b =>
                {
                    b.Property<string>("ModId")
                        .HasColumnType("text")
                        .HasColumnName("mod_id");

                    b.Property<int>("NexusModsId")
                        .HasColumnType("integer")
                        .HasColumnName("nexusmods_id");

                    b.HasKey("ModId")
                        .HasName("mod_nexus_mods_manual_link_pkey");

                    b.ToTable("mod_nexusmods_manual_link", (string)null);
                });

            modelBuilder.Entity("BUTR.Site.NexusMods.Server.Models.Database.NexusModsModEntity", b =>
                {
                    b.Property<int>("ModId")
                        .HasColumnType("integer")
                        .HasColumnName("mod_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<List<int>>("UserIds")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("user_ids");

                    b.HasKey("ModId")
                        .HasName("nexusmods_mod_entity_pkey");

                    b.ToTable("nexusmods_mod_entity", (string)null);
                });

            modelBuilder.Entity("BUTR.Site.NexusMods.Server.Models.Database.UserAllowedModsEntity", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<List<string>>("AllowedModIds")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("allowed_mod_ids");

                    b.HasKey("UserId")
                        .HasName("user_allowed_mods_pkey");

                    b.ToTable("user_allowed_mods", (string)null);
                });

            modelBuilder.Entity("BUTR.Site.NexusMods.Server.Models.Database.UserCrashReportEntity", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<Guid>("crash_report_id")
                        .HasColumnType("uuid");

                    b.HasKey("UserId")
                        .HasName("user_crash_report_entity_pkey");

                    b.HasIndex("crash_report_id");

                    b.ToTable("user_crash_report_entity", (string)null);
                });

            modelBuilder.Entity("BUTR.Site.NexusMods.Server.Models.Database.UserRoleEntity", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.HasKey("UserId")
                        .HasName("user_role_pkey");

                    b.ToTable("user_role", (string)null);
                });

            modelBuilder.Entity("BUTR.Site.NexusMods.Server.Models.Database.CrashReportFileEntity", b =>
                {
                    b.HasOne("BUTR.Site.NexusMods.Server.Models.Database.CrashReportEntity", "CrashReport")
                        .WithOne()
                        .HasForeignKey("BUTR.Site.NexusMods.Server.Models.Database.CrashReportFileEntity", "crash_report_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_crash_report_file_entity_crash_report_id");

                    b.Navigation("CrashReport");
                });

            modelBuilder.Entity("BUTR.Site.NexusMods.Server.Models.Database.UserCrashReportEntity", b =>
                {
                    b.HasOne("BUTR.Site.NexusMods.Server.Models.Database.CrashReportEntity", "CrashReport")
                        .WithMany("UserCrashReports")
                        .HasForeignKey("crash_report_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_user_crash_report_entity_crash_report_entity_crash_report_id");

                    b.Navigation("CrashReport");
                });

            modelBuilder.Entity("BUTR.Site.NexusMods.Server.Models.Database.CrashReportEntity", b =>
                {
                    b.Navigation("UserCrashReports");
                });
#pragma warning restore 612, 618
        }
    }
}
