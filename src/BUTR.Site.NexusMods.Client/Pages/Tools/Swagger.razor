@attribute [AllowAnonymous]
@page "/swagger"

@implements IAsyncDisposable

@inject IJSRuntime _jsRuntime
@inject IOptions<BackendOptions> _backendOptions

<style>
    .swagger-ui .scheme-container {
        background: transparent;
    }
    .swagger-ui .opblock .opblock-section-header {
        background: transparent;
    }
</style>

<div id="swagger-ui"></div>

@code {

    private sealed class Container
    {
        private readonly Func<Task> _action;
        public Container(Func<Task> action) => _action = action;

        [JSInvokable("OnLoad")]
        public Task OnLoad() => _action();

        [JSInvokable("OnError")]
        public Task OnError() => Task.CompletedTask;
    }

    private IJSObjectReference _module = default!;

    protected override async Task OnInitializedAsync()
    {
        _module = await _jsRuntime.InvokeAsync<IJSObjectReference>("import", "../js/swagger.js");

        await _module.InvokeVoidAsync("init", DotNetObjectReference.Create(new Container(async () =>
        {
            await _module.InvokeVoidAsync("render", "#swagger-ui", _backendOptions.Value.Endpoint);
        })));

        await base.OnInitializedAsync();
    }

    public async ValueTask DisposeAsync()
    {
        await _module.InvokeVoidAsync("deinit");
        await _module.DisposeAsync();
    }

}