@attribute [Authorize(Roles = $"{ApplicationRoles.Anonymous}")]
@page "/login-nexusmods-token"

@inject NavigationManager _navigationManager
@inject IAuthenticationProvider _authenticationProvider

<Container>
    <Row Flex="Flex.JustifyContent.Center">
        <Column ColumnSize="ColumnSize.Is6.OnDesktop.IsAuto.OnMobile">
            <Card Margin="Margin.Is5.OnDesktop.Is3.OnMobile" Border="Border.Is0.Rounded" Shadow="Shadow.Small">
                <CardHeader>
                    <CardTitle Size="4" Margin="Margin.Is0">NexusMods Log In</CardTitle>
                </CardHeader>
                <CardBody>
                    <Form>
                        <Field>
                            <FieldLabel>NexusMods API Key</FieldLabel>
                            <FieldBody>
                                <TextEdit Role="@TextRole.Password" @bind-Text="@_model.Input"></TextEdit>
                            </FieldBody>
                        </Field>
                        <Field>
                            <Button Block="true" Color="Color.Primary" Type="@ButtonType.Submit" Loading="@_isLoading" Clicked="@OnSubmit" PreventDefaultOnSubmit>Login</Button>
                        </Field>
                    </Form>
                </CardBody>
            </Card>
        </Column>
    </Row>
</Container>

@code {

    private sealed record LoginModel
    {
        public required string Input { get; set; }
    }

    private readonly LoginModel _model = new();
    private bool _isLoading;
    
    private async void OnSubmit()
    {
        _isLoading = true;

        try
        {
            if (await _authenticationProvider.AuthenticateAsync(_model.Input, "nexusmods") is null)
            {
                _isLoading = false;
                StateHasChanged();
            }
            else
            {
                _navigationManager.NavigateTo(_navigationManager.QueryString("returnUrl") ?? "");
            }
        }
        catch
        {
            _isLoading = true;
            StateHasChanged();
        }
    }

}