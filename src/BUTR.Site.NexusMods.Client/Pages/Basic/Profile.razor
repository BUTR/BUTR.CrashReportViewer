@attribute [Authorize]
@page "/profile"

@inject NavigationManager _navigationManager
@inject INexusModsUserClient _userClient
@inject IDiscordClient _discordClient
@inject ISteamClient _steamClient
@inject IGOGClient _gogClient

@if (_user is null)
{
    <Spinner/>
}
else
{
    <Container>
        <Card Margin="@Margin.Is4" Shadow="@Shadow.Small">
            <CardHeader>
                <CardTitle Size="4" Margin="@Margin.Is0">Profile</CardTitle>
            </CardHeader>
            <CardBody>
                @* Mobile *@
                <Div Display="@Display.Block.OnMobile.None.OnDesktop">
                    <Row>
                        @ProfilePrimary(_user)
                    </Row>
                    <Row>
                        @ProfileSecondary(_user)
                    </Row>
                </Div>

                @* Desktop *@
                <Div Display="@Display.Block.OnDesktop.None.OnMobile">
                    <Row>
                        <Column ColumnSize="@ColumnSize.Is4">
                            @ProfilePrimary(_user)
                        </Column>
                        <Column>
                            @ProfileSecondary(_user)
                        </Column>
                    </Row>
                </Div>
            </CardBody>
        </Card>
    </Container>
}

@code {
    
    private RenderFragment ProfilePrimary(ProfileModel user) =>
        @<Card Shadow="@Shadow.Small">
            <CardBody TextAlignment="@TextAlignment.Center">
                <CardImage Width="@Width.Is50" Source="@user.ProfileUrl.Replace(@"{BASE}", _navigationManager.BaseUri)" Border="@Border.RoundedCircle" Alt="@("Profile Image")"/>
                <CardTitle Size="5"><Blazorise.Link To="@user.Url()">@user.Name</Blazorise.Link></CardTitle>
                <CardText TextColor="@TextColor.Secondary">@user.Role</CardText>
                @if (user.IsPremium)
                {
                    <CardText TextColor="@TextColor.Secondary">Premium</CardText>
                }
                @if (user.IsSupporter)
                {
                    <CardText TextColor="@TextColor.Secondary">Supporter</CardText>
                }
                @if (user.HasTenantGame)
                {
                    <CardText TextColor="@TextColor.Secondary">Owns Game</CardText>
                }
            </CardBody>
        </Card>;

    private RenderFragment ProfileSecondary(ProfileModel user) =>
        @<Card Shadow="@Shadow.Small">
            <CardBody>
                <Row>
                    <Column ColumnSize="@ColumnSize.Is3" TextWeight="@TextWeight.Bold">NexusMods Id</Column>
                    <Column ColumnSize="@ColumnSize.Is9" TextColor="@TextColor.Secondary">@user.NexusModsUserId</Column>
                </Row>
                <Divider/>
                <Row>
                    <Column ColumnSize="@ColumnSize.Is3" TextWeight="@TextWeight.Bold">NexusMods Name</Column>
                    <Column ColumnSize="@ColumnSize.Is9" TextColor="@TextColor.Secondary">@user.Name</Column>
                </Row>
                <Divider/>
                <Row>
                    <Column ColumnSize="@ColumnSize.Is3" TextWeight="@TextWeight.Bold">NexusMods Email</Column>
                    <Column ColumnSize="@ColumnSize.Is9" TextColor="@TextColor.Secondary">@user.Email</Column>
                </Row>
                <Divider/>
                <Row>
                    <Column ColumnSize="@ColumnSize.Is3" TextWeight="@TextWeight.Bold">Discord</Column>
                    <Column ColumnSize="@ColumnSize.Is9" TextColor="@TextColor.Secondary">
                        @if (_user.DiscordUserId is not null && _discordUser is null)
                        {
                            <Text>...loading</Text>
                        }
                        else if (_user.DiscordUserId is not null && _discordUser.NeedsRelink)
                        {
                            <Anchor Style="text-decoration: none" To="discord-linked-role" Target="@Target.Blank">Needs Relinking</Anchor>
                        }
                        else if (_user.DiscordUserId is not null)
                        {
                            <Anchor Style="text-decoration: none" To="@_discordUser.Url" Target="@Target.Blank">@_discordUser.Name</Anchor>
                        }
                        else
                        {
                            <Anchor Style="text-decoration: none" To="discord-linked-role" Target="@Target.Blank">Not Linked</Anchor>
                        }
                    </Column>
                </Row>
                <Divider/>
                <Row>
                    <Column ColumnSize="@ColumnSize.Is3" TextWeight="@TextWeight.Bold">Steam</Column>
                    <Column ColumnSize="@ColumnSize.Is9" TextColor="@TextColor.Secondary">
                        @if (_user.SteamUserId is not null && _steamUser is null)
                        {
                            <Text>...loading</Text>
                        }
                        else if (_user.SteamUserId is not null && _steamUser.NeedsRelink)
                        {
                            <Anchor Style="text-decoration: none" To="steam-linked-role" Target="@Target.Blank">Needs Relinking</Anchor>
                        }
                        else if (_user.SteamUserId is not null)
                        {
                            <Anchor Style="text-decoration: none" To="@_steamUser.Url" Target="@Target.Blank">@_steamUser.Name</Anchor>
                        }
                        else
                        {
                            <Anchor Style="text-decoration: none" To="steam-linked-role" Target="@Target.Blank">Not Linked</Anchor>
                        }
                    </Column>
                </Row>
                <Divider/>
                <Row>
                    <Column ColumnSize="@ColumnSize.Is3" TextWeight="@TextWeight.Bold">GOG</Column>
                    <Column ColumnSize="@ColumnSize.Is9" TextColor="@TextColor.Secondary">
                        @if (_user.GogUserId is not null && _gogUser is null)
                        {
                            <Text>...loading</Text>
                        }
                        else if (_user.GogUserId is not null && _gogUser.NeedsRelink)
                        {
                            <Anchor Style="text-decoration: none" To="gog-linked-role" Target="@Target.Blank">Needs Relinking</Anchor>
                        }
                        else if (_user.GogUserId is not null)
                        {
                            <Anchor Style="text-decoration: none" To="@_gogUser.Url" Target="@Target.Blank">@_gogUser.Name</Anchor>
                        }
                        else
                        {
                            <Anchor Style="text-decoration: none" To="gog-linked-role" Target="@Target.Blank">Not Linked</Anchor>
                        }
                    </Column>
                </Row>
            </CardBody>
        </Card>;

    private ProfileModel? _user;
    private DiscordUserInfo2? _discordUser;
    private SteamUserInfo2? _steamUser;
    private GOGUserInfo2? _gogUser;

    protected override async Task OnInitializedAsync()
    {
        var userResponse = await _userClient.ProfileAsync();
        _user = userResponse.Value;

        if (_user?.DiscordUserId is not null)
        {
            _ = _discordClient.GetUserInfoAsync().ContinueWith(x =>
            {
                _discordUser = new(x.Result?.Value);
                StateHasChanged();
            });
        }
        
        if (_user?.SteamUserId is not null)
        {
            _ = _steamClient.GetUserInfoAsync().ContinueWith(x =>
            {
                _steamUser = new(x.Result?.Value);
                StateHasChanged();
            });
        }
        
        if (_user?.GogUserId is not null)
        {
            _ = _gogClient.GetUserInfoAsync().ContinueWith(x =>
            {
                _gogUser = new(x.Result?.Value);
                StateHasChanged();
            });
        }
    }

}