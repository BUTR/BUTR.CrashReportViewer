@page "/crash-reports-viewer"
@attribute [Authorize]
@inject NavigationManager _navigationManager
@inject ILocalStorageService _localStorage
@inject BackendAPIClient _backendApiClient

<div class="card">
    <h4 class="card-header">Crash Reports</h4>
    <div class="card-body">
        @if (_reports == null)
        {
            <span class="spinner-border"></span>
        }
        else
        {
            <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Date</th>
                    <th scope="col">Status</th>
                    <th scope="col">Comment</th>
                    <th scope="col"></th>
                </tr>
                </thead>
                <tbody>
                @foreach (var report in _reports)
                {
                    <tr>
                        <td>@report.Id</td>
                        <td>@report.Date.ToString("yy-MM-dd HH:mm:ss")</td>
                        <td>@report.Status</td>
                        <td>
                            <EditForm Model="@report">
                                <InputText id="name" @bind-Value="report.Comment" @onfocusout="() => OnFocusOut(report)" />
                            </EditForm>
                        </td>
                        <td>
                            <button @onclick="OnSelected">
                                Open
                            </button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
            </div>
        }
    </div>
</div>

@code {
    private CrashReportModel[]? _reports;
    private string _token = default!;

    protected override async Task OnInitializedAsync()
    {
        _token = await _localStorage.GetItemAsStringAsync("token");
        _reports = await _backendApiClient.GetCrashReports(_token);
    }


    private void OnFocusOut(CrashReportModel report)
    {

    }

    private void OnSelected()
    {

    }
}
